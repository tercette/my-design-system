/*! For license information please see components-ui-Button-stories.13a0cae4.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkmy_design_system=self.webpackChunkmy_design_system||[]).push([[787],{"./src/components/ui/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Destructive:()=>Destructive,Disabled:()=>Disabled,Ghost:()=>Ghost,IconButton:()=>IconButton,Link:()=>Link,Outline:()=>Outline,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),ui_button=__webpack_require__("./src/components/ui/button.tsx");const Trash=(0,__webpack_require__("./node_modules/lucide-react/dist/esm/createLucideIcon.js").A)("Trash",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}]]),Button_stories={title:"Design System/Button",component:ui_button.$,tags:["autodocs"],argTypes:{variant:{control:"select",options:["default","destructive","outline","secondary","ghost","link"]},size:{control:"select",options:["sm","default","lg","icon"]},children:{control:"text",defaultValue:"Botão Padrão"},disabled:{control:"boolean"}}},Default={args:{variant:"default",size:"default",children:"Botão Padrão"}},Destructive={args:{variant:"destructive",size:"default",children:"Botão Destrutivo"}},Outline={args:{variant:"outline",size:"default",children:"Botão Outline"}},Secondary={args:{variant:"secondary",size:"default",children:"Botão Secundário"}},Ghost={args:{variant:"ghost",size:"default",children:"Botão Ghost"}},Link={args:{variant:"link",size:"default",children:"Botão Link"}},Disabled={args:{variant:"default",size:"default",children:"Botão Desativado",disabled:!0}},IconButton={args:{variant:"default",size:"icon"},render:args=>(0,jsx_runtime.jsx)(ui_button.$,{...args,children:(0,jsx_runtime.jsx)(Trash,{className:"w-5 h-5"})})},__namedExportsOrder=["Default","Destructive","Outline","Secondary","Ghost","Link","Disabled","IconButton"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "default",\n    children: "Botão Padrão"\n  }\n}',...Default.parameters?.docs?.source}}},Destructive.parameters={...Destructive.parameters,docs:{...Destructive.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "destructive",\n    size: "default",\n    children: "Botão Destrutivo"\n  }\n}',...Destructive.parameters?.docs?.source}}},Outline.parameters={...Outline.parameters,docs:{...Outline.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "outline",\n    size: "default",\n    children: "Botão Outline"\n  }\n}',...Outline.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "secondary",\n    size: "default",\n    children: "Botão Secundário"\n  }\n}',...Secondary.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "ghost",\n    size: "default",\n    children: "Botão Ghost"\n  }\n}',...Ghost.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "link",\n    size: "default",\n    children: "Botão Link"\n  }\n}',...Link.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "default",\n    children: "Botão Desativado",\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}},IconButton.parameters={...IconButton.parameters,docs:{...IconButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "default",\n    size: "icon"\n  },\n  render: args => <Button {...args}>\r\n        <TrashIcon className="w-5 h-5" />\r\n      </Button>\n}',...IconButton.parameters?.docs?.source}}}},"./src/components/ui/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function setRef(ref,value){if("function"==typeof ref)return ref(value);null!=ref&&(ref.current=value)}function composeRefs(...refs){return node=>{let hasCleanup=!1;const cleanups=refs.map((ref=>{const cleanup=setRef(ref,node);return hasCleanup||"function"!=typeof cleanup||(hasCleanup=!0),cleanup}));if(hasCleanup)return()=>{for(let i=0;i<cleanups.length;i++){const cleanup=cleanups[i];"function"==typeof cleanup?cleanup():setRef(refs[i],null)}}}}var Slot=react.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props,childrenArray=react.Children.toArray(children),slottable=childrenArray.find(isSlottable);if(slottable){const newElement=slottable.props.children,newChildren=childrenArray.map((child=>child===slottable?react.Children.count(newElement)>1?react.Children.only(null):react.isValidElement(newElement)?newElement.props.children:null:child));return(0,jsx_runtime.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children:react.isValidElement(newElement)?react.cloneElement(newElement,void 0,newChildren):null})}return(0,jsx_runtime.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children})}));Slot.displayName="Slot";var SlotClone=react.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props;if(react.isValidElement(children)){const childrenRef=function getElementRef(element){let getter=Object.getOwnPropertyDescriptor(element.props,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning;if(mayWarn)return element.ref;if(getter=Object.getOwnPropertyDescriptor(element,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning,mayWarn)return element.props.ref;return element.props.ref||element.ref}(children),props2=function mergeProps(slotProps,childProps){const overrideProps={...childProps};for(const propName in childProps){const slotPropValue=slotProps[propName],childPropValue=childProps[propName];/^on[A-Z]/.test(propName)?slotPropValue&&childPropValue?overrideProps[propName]=(...args)=>{childPropValue(...args),slotPropValue(...args)}:slotPropValue&&(overrideProps[propName]=slotPropValue):"style"===propName?overrideProps[propName]={...slotPropValue,...childPropValue}:"className"===propName&&(overrideProps[propName]=[slotPropValue,childPropValue].filter(Boolean).join(" "))}return{...slotProps,...overrideProps}}(slotProps,children.props);return children.type!==react.Fragment&&(props2.ref=forwardedRef?composeRefs(forwardedRef,childrenRef):childrenRef),react.cloneElement(children,props2)}return react.Children.count(children)>1?react.Children.only(null):null}));SlotClone.displayName="SlotClone";var Slottable=({children})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children});function isSlottable(child){return react.isValidElement(child)&&child.type===Slottable}var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");const falsyToString=value=>"boolean"==typeof value?`${value}`:0===value?"0":value,cx=clsx.$;var utils=__webpack_require__("./src/lib/utils.ts");const buttonVariants=(base="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-[var(--radius)] text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",config={variants:{variant:{default:"bg-primary text-primary-foreground shadow hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",outline:"border border-border bg-background text-foreground shadow-sm hover:bg-muted",secondary:"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/90",ghost:"hover:bg-muted hover:text-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-[var(--radius)] px-3 text-xs",lg:"h-10 rounded-[var(--radius)] px-8",icon:"h-9 w-9 flex items-center justify-center p-0"}},defaultVariants:{variant:"default",size:"default"}},props=>{var _config_compoundVariants;if(null==(null==config?void 0:config.variants))return cx(base,null==props?void 0:props.class,null==props?void 0:props.className);const{variants,defaultVariants}=config,getVariantClassNames=Object.keys(variants).map((variant=>{const variantProp=null==props?void 0:props[variant],defaultVariantProp=null==defaultVariants?void 0:defaultVariants[variant];if(null===variantProp)return null;const variantKey=falsyToString(variantProp)||falsyToString(defaultVariantProp);return variants[variant][variantKey]})),propsWithoutUndefined=props&&Object.entries(props).reduce(((acc,param)=>{let[key,value]=param;return void 0===value||(acc[key]=value),acc}),{}),getCompoundVariantClassNames=null==config||null===(_config_compoundVariants=config.compoundVariants)||void 0===_config_compoundVariants?void 0:_config_compoundVariants.reduce(((acc,param)=>{let{class:cvClass,className:cvClassName,...compoundVariantOptions}=param;return Object.entries(compoundVariantOptions).every((param=>{let[key,value]=param;return Array.isArray(value)?value.includes({...defaultVariants,...propsWithoutUndefined}[key]):{...defaultVariants,...propsWithoutUndefined}[key]===value}))?[...acc,cvClass,cvClassName]:acc}),[]);return cx(base,getVariantClassNames,getCompoundVariantClassNames,null==props?void 0:props.class,null==props?void 0:props.className)});var base,config;const Button=react.forwardRef((({className,variant,size,children,asChild=!1,...props},ref)=>{const Comp=asChild?Slot:"button",isIcon="icon"===size;return(0,jsx_runtime.jsx)(Comp,{className:(0,utils.cn)(buttonVariants({variant,size,className}),isIcon&&"p-0 flex items-center justify-center"),ref,...props,children:isIcon?react.isValidElement(children)&&children:children})}));Button.displayName="Button",Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}},composes:["VariantProps"]}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}},"./node_modules/lucide-react/dist/esm/createLucideIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>createLucideIcon});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const mergeClasses=(...classes)=>classes.filter(((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index)).join(" ").trim();var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)((({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...rest},[...iconNode.map((([tag,attrs])=>(0,react.createElement)(tag,attrs))),...Array.isArray(children)?children:[children]]))),createLucideIcon=(iconName,iconNode)=>{const Component=(0,react.forwardRef)((({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=iconName,string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,className),...props});var string}));return Component.displayName=`${iconName}`,Component}}}]);